# Production Dockerfile —Å –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è–º–∏ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
FROM node:18-alpine AS base

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º pnpm –≥–ª–æ–±–∞–ª—å–Ω–æ
RUN npm install -g pnpm

# –°–æ–∑–¥–∞–µ–º —Ä–∞–±–æ—á—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
WORKDIR /app

# Cache busting –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
ARG GIT_SHA=unknown
ARG BUILD_TIME=unknown
RUN echo "Building with GIT_SHA: $GIT_SHA at $BUILD_TIME"

# –ö–æ–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –º–æ–Ω–æ—Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
COPY package.json pnpm-lock.yaml pnpm-workspace.yaml ./

# –ö–æ–ø–∏—Ä—É–µ–º –≤—Å–µ package.json —Ñ–∞–π–ª—ã –∏–∑ –≤—Å–µ—Ö –ø–∞–∫–µ—Ç–æ–≤
COPY apps/web/package.json ./apps/web/
COPY packages/db/package.json ./packages/db/
COPY packages/contracts/package.json ./packages/contracts/
COPY packages/ui/package.json ./packages/ui/
COPY packages/utils/package.json ./packages/utils/

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ (–≤–∫–ª—é—á–∞—è production dependencies)
RUN pnpm install --frozen-lockfile --prod=false

# –ö–æ–ø–∏—Ä—É–µ–º –≤–µ—Å—å –∏—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥
COPY . .

# –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å—Ö–µ–º—É –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
RUN pnpm db:generate

# –°–æ–±–∏—Ä–∞–µ–º –ø–∞–∫–µ—Ç—ã
RUN pnpm --filter contracts build || true
RUN pnpm --filter utils build || true
RUN pnpm --filter db build

# –°–æ–±–∏—Ä–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
RUN DATABASE_URL="postgresql://build:build@localhost:5432/build" \
    NEXTAUTH_SECRET="build-secret-32-chars-minimum" \
    NEXTAUTH_URL="http://localhost:3000" \
    PUBLIC_BASE_URL="http://localhost:3000" \
    S3_ENDPOINT="http://localhost:9000" \
    S3_ACCESS_KEY="build" \
    S3_SECRET_KEY="build" \
    SKIP_ENV_VALIDATION=true \
    pnpm build

# Production —ç—Ç–∞–ø
FROM node:18-alpine AS runner
WORKDIR /app

# –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –±–µ–∑ root –ø—Ä–∞–≤
RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º pnpm
RUN npm install -g pnpm

# –ö–æ–ø–∏—Ä—É–µ–º —Å–æ–±—Ä–∞–Ω–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
COPY --from=base --chown=nextjs:nodejs /app/apps/web/.next/standalone ./
COPY --from=base --chown=nextjs:nodejs /app/apps/web/.next/static ./apps/web/.next/static
COPY --from=base --chown=nextjs:nodejs /app/apps/web/public ./apps/web/public

# –ö–æ–ø–∏—Ä—É–µ–º package.json –∏ —Å–∫–æ–º–ø–∏–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–∞–∫–µ—Ç—ã –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–π
COPY --from=base --chown=nextjs:nodejs /app/package.json ./
COPY --from=base --chown=nextjs:nodejs /app/packages/db ./packages/db
COPY --from=base --chown=nextjs:nodejs /app/packages/contracts ./packages/contracts
COPY --from=base --chown=nextjs:nodejs /app/packages/utils ./packages/utils
COPY --from=base --chown=nextjs:nodejs /app/node_modules ./node_modules

USER nextjs

EXPOSE 3000

ENV PORT=3000
ENV NODE_ENV=production
ENV HOSTNAME="0.0.0.0"

# –°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Å –º–∏–≥—Ä–∞—Ü–∏—è–º–∏
COPY --chown=nextjs:nodejs <<'EOF' /app/start.sh
#!/bin/sh
echo "üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –ó–≤—ë–∑–¥–Ω–æ–µ –í–µ—Ä–µ—Ç–µ–Ω–æ (Production)..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
if [ -z "$DATABASE_URL" ]; then
  echo "‚ùå –û—à–∏–±–∫–∞: DATABASE_URL –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
  exit 1
fi

if [ -z "$NEXTAUTH_SECRET" ]; then
  echo "‚ùå –û—à–∏–±–∫–∞: NEXTAUTH_SECRET –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
  exit 1
fi

echo "üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è –ë–î..."
if echo "$DATABASE_URL" | grep -q "postgresql://"; then
  echo "‚úÖ DATABASE_URL –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω"
else
  echo "‚ö†Ô∏è DATABASE_URL –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º: $DATABASE_URL"
fi

echo "üîÑ –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
if ! pnpm --filter db migrate; then
  echo "‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–∏–º–µ–Ω–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏–∏, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º..."
fi

echo "üåü –ó–∞–ø—É—Å–∫ Next.js –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
exec node apps/web/server.js
EOF

RUN chmod +x /app/start.sh

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
  CMD curl -f http://localhost:3000/api/health || exit 1

CMD ["/app/start.sh"]
