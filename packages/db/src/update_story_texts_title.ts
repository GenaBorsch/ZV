/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∑–∞–ø–∏—Å–µ–π story_texts —Å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º –ø–æ–ª—è title
 * –ó–∞–ø—É—Å–∫: DATABASE_URL="..." pnpm tsx packages/db/src/update_story_texts_title.ts
 */

import { db } from './index';
import { storyTexts } from './schema';
import { eq } from 'drizzle-orm';

async function updateStoryTextsTitle() {
  console.log('üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∑–∞–ø–∏—Å–µ–π story_texts —Å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º –ø–æ–ª—è title...');

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–≥–æ–ª–æ–≤–∫–∞ –∏–∑ —Ç–µ–∫—Å—Ç–∞
  const createTitle = (text: string): string => {
    // –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–µ 50 —Å–∏–º–≤–æ–ª–æ–≤ –∏ –æ–±—Ä–µ–∑–∞–µ–º –ø–æ –ø–æ—Å–ª–µ–¥–Ω–µ–º—É —Å–ª–æ–≤—É
    const truncated = text.substring(0, 50);
    const lastSpace = truncated.lastIndexOf(' ');
    return lastSpace > 20 ? truncated.substring(0, lastSpace) : truncated;
  };

  try {
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∑–∞–ø–∏—Å–∏ –±–µ–∑ title (–µ—Å–ª–∏ –ø–æ–ª–µ –ø—É—Å—Ç–æ–µ)
    const records = await db
      .select()
      .from(storyTexts)
      .where(eq(storyTexts.title, ''));

    console.log(`üìù –ù–∞–π–¥–µ–Ω–æ ${records.length} –∑–∞–ø–∏—Å–µ–π –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è`);

    // –û–±–Ω–æ–≤–ª—è–µ–º –∫–∞–∂–¥—É—é –∑–∞–ø–∏—Å—å
    for (const record of records) {
      const title = createTitle(record.text);
      
      await db
        .update(storyTexts)
        .set({ 
          title,
          updatedAt: new Date()
        })
        .where(eq(storyTexts.id, record.id));
      
      console.log(`‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∞ –∑–∞–ø–∏—Å—å ${record.id}: "${title}"`);
    }

    console.log('üéâ –í—Å–µ –∑–∞–ø–∏—Å–∏ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã!');
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∑–∞–ø–∏—Å–µ–π:', error);
    throw error;
  }
}

updateStoryTextsTitle()
  .catch((error) => {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
    process.exit(1);
  });

