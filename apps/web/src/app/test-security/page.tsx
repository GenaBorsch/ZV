'use client';

import React, { useState } from 'react';
import { FileUpload } from '@/components/FileUpload';
import { Alert, AlertDescription } from '@/components/ui/alert';

export default function SecurityTestPage() {
  const [testResults, setTestResults] = useState<string[]>([]);

  const addTestResult = (message: string) => {
    setTestResults(prev => [...prev, `${new Date().toLocaleTimeString()}: ${message}`]);
  };

  const createMaliciousFile = (filename: string, content: string, mimeType: string) => {
    const blob = new Blob([content], { type: mimeType });
    return new File([blob], filename, { type: mimeType });
  };

  const testMaliciousFiles = async () => {
    const tests = [
      {
        name: '–ü–æ–¥–¥–µ–ª–∫–∞ MIME-—Ç–∏–ø–∞ (.exe –∫–∞–∫ image/png)',
        file: createMaliciousFile('malware.exe', 'MZ\x90\x00\x03\x00\x00\x00\x04\x00', 'image/png'),
        shouldFail: true
      },
      {
        name: '–ü–æ–¥–¥–µ–ª–∫–∞ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è (malware.png —Å .exe —Å–æ–¥–µ—Ä–∂–∏–º—ã–º)',
        file: createMaliciousFile('malware.png', 'MZ\x90\x00\x03\x00\x00\x00\x04\x00', 'image/png'),
        shouldFail: true
      },
      {
        name: '–í–∞–ª–∏–¥–Ω–æ–µ PNG –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ',
        file: new File([new Uint8Array([0x89, 0x50, 0x4E, 0x47, 0x0D, 0x0A, 0x1A, 0x0A])], 'valid.png', { type: 'image/png' }),
        shouldFail: false
      },
      {
        name: 'Batch —Ñ–∞–π–ª —Å –ø–æ–¥–¥–µ–ª–∫–æ–π (.bat –∫–∞–∫ image/jpeg)',
        file: createMaliciousFile('script.bat', '@echo off\ndel /f /q C:\\*', 'image/jpeg'),
        shouldFail: true
      }
    ];

    for (const test of tests) {
      try {
        // –ò–º–∏—Ç–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É —á–µ—Ä–µ–∑ FormData
        const formData = new FormData();
        formData.append('file', test.file);
        formData.append('type', 'avatar');

        const response = await fetch('/api/upload', {
          method: 'POST',
          body: formData,
        });

        const result = await response.json();
        
        if (test.shouldFail) {
          if (response.ok) {
            addTestResult(`‚ùå –ü–†–û–í–ê–õ: ${test.name} - —Ñ–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω, –Ω–æ –¥–æ–ª–∂–µ–Ω –±—ã–ª –±—ã—Ç—å –æ—Ç–∫–ª–æ–Ω–µ–Ω!`);
          } else {
            addTestResult(`‚úÖ –£–°–ü–ï–•: ${test.name} - —Ñ–∞–π–ª –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ—Ç–∫–ª–æ–Ω–µ–Ω: ${result.error}`);
          }
        } else {
          if (response.ok) {
            addTestResult(`‚úÖ –£–°–ü–ï–•: ${test.name} - –≤–∞–ª–∏–¥–Ω—ã–π —Ñ–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω`);
          } else {
            addTestResult(`‚ùå –ü–†–û–í–ê–õ: ${test.name} - –≤–∞–ª–∏–¥–Ω—ã–π —Ñ–∞–π–ª –æ—Ç–∫–ª–æ–Ω–µ–Ω: ${result.error}`);
          }
        }
      } catch (error) {
        addTestResult(`‚ùå –û–®–ò–ë–ö–ê: ${test.name} - ${error}`);
      }
    }
  };

  return (
    <div className="container mx-auto py-8 px-4">
      <h1 className="text-3xl font-bold mb-8">–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤</h1>

      <div className="grid grid-cols-1 lg:grid-cols-2 gap-8">
        <div>
          <h2 className="text-2xl font-semibold mb-4">–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ç–µ—Å—Ç—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏</h2>
          <button
            onClick={testMaliciousFiles}
            className="bg-red-600 hover:bg-red-700 text-white px-6 py-2 rounded-md mb-4"
          >
            üß™ –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
          </button>

          <div className="space-y-2 max-h-96 overflow-y-auto bg-gray-50 p-4 rounded-md">
            <h3 className="font-semibold">–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–æ–≤:</h3>
            {testResults.length === 0 ? (
              <p className="text-gray-500">–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –≤—ã—à–µ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Ç–µ—Å—Ç–æ–≤</p>
            ) : (
              testResults.map((result, index) => (
                <div key={index} className="text-sm font-mono">
                  {result}
                </div>
              ))
            )}
          </div>
        </div>

        <div>
          <h2 className="text-2xl font-semibold mb-4">–†—É—á–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ</h2>
          
          <div className="space-y-6">
            <div>
              <h3 className="text-lg font-medium mb-2">–ó–∞–≥—Ä—É–∑–∫–∞ –∞–≤–∞—Ç–∞—Ä–∞</h3>
              <FileUpload
                type="avatar"
                onUpload={(result) => {
                  addTestResult(`üìÅ –ê–≤–∞—Ç–∞—Ä –∑–∞–≥—Ä—É–∂–µ–Ω: ${result.url}`);
                }}
                onError={(error) => {
                  addTestResult(`‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∞–≤–∞—Ç–∞—Ä–∞: ${error}`);
                }}
              />
            </div>

            <Alert>
              <AlertDescription>
                <strong>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–≥—Ä—É–∑–∏—Ç—å:</strong>
                <ul className="list-disc list-inside mt-2 space-y-1">
                  <li>–§–∞–π–ª .exe –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–Ω—ã–π –≤ .png</li>
                  <li>–¢–µ–∫—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º .jpg</li>
                  <li>–§–∞–π–ª .bat —Å MIME-—Ç–∏–ø–æ–º image/jpeg</li>
                  <li>–û—á–µ–Ω—å –±–æ–ª—å—à–æ–π —Ñ–∞–π–ª (&gt;5–ú–ë)</li>
                </ul>
                –í—Å–µ —ç—Ç–∏ —Ñ–∞–π–ª—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –æ—Ç–∫–ª–æ–Ω–µ–Ω—ã —Å–∏—Å—Ç–µ–º–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏.
              </AlertDescription>
            </Alert>
          </div>
        </div>
      </div>

      <div className="mt-8">
        <h2 className="text-2xl font-semibold mb-4">–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏</h2>
        <div className="bg-blue-50 p-6 rounded-lg">
          <h3 className="text-lg font-medium mb-2">üõ°Ô∏è –†–µ–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–µ –º–µ—Ä—ã –∑–∞—â–∏—Ç—ã:</h3>
          <ul className="list-disc list-inside space-y-1">
            <li><strong>–ü—Ä–æ–≤–µ—Ä–∫–∞ MIME-—Ç–∏–ø–∞:</strong> –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ Content-Type —Ñ–∞–π–ª–∞</li>
            <li><strong>–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è:</strong> –í–∞–ª–∏–¥–∏—Ä—É–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Ñ–∞–π–ª–∞</li>
            <li><strong>–ú–∞–≥–∏—á–µ—Å–∫–∏–µ –±–∞–π—Ç—ã:</strong> –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–≤—ã–µ –±–∞–π—Ç—ã —Ñ–∞–π–ª–∞ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ä–µ–∞–ª—å–Ω–æ–≥–æ —Ç–∏–ø–∞</li>
            <li><strong>–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞:</strong> –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–æ–≤ (5–ú–ë –¥–ª—è –∞–≤–∞—Ç–∞—Ä–æ–≤, 10–ú–ë –¥–ª—è –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤)</li>
            <li><strong>–ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞:</strong> –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–æ–ª–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ –∑–∞–≥—Ä—É–∑–∫–∏</li>
            <li><strong>–ê–≤—Ç–æ—É–¥–∞–ª–µ–Ω–∏–µ:</strong> –°—Ç–∞—Ä—ã–µ —Ñ–∞–π–ª—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–¥–∞–ª—è—é—Ç—Å—è –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏</li>
          </ul>
        </div>
      </div>
    </div>
  );
}
